name: Docker CICD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Docker build and push
    runs-on: ubuntu-latest
    steps:
     
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Docker build & tag
        run: docker build . --tag ${{ secrets.DOCKERHUB_REPOSITORY }}:latest
      - name: Docker master push
        run: |
          docker push ${{ secrets.DOCKERHUB_REPOSITORY }}:latest

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition csiapp --query taskDefinition > task-definition.json
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: csi-container
          image: ${{ secrets.DOCKERHUB_REPOSITORY }}:latest
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: csiapp
          cluster: csi
          wait-for-service-stability: true

